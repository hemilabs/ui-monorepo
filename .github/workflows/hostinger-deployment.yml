name: Hostinger Deployment

on:
  push:
    branches:
      - main
  release:
    types:
      - published

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: false

jobs:
  deploy:
    environment: ${{ github.event_name == 'release' && 'production' || 'staging' }}
    runs-on: ubuntu-latest
    steps:
      - uses: bloq/actions/notify-deploy-to-slack@v1
        with:
          app-name: Hemi Portal
          environment: ${{ vars.ENVIRONMENT_NAME }}
          reference: ${{ github.event_name == 'release' && github.event.release.name || github.event.head_commit.message }}
          slack-mention: ${{ vars.SLACK_MENTION }}
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: 'started :stopwatch:'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: hemilabs/actions/setup-node-env@v1
      - uses: ./.github/actions/deploy-portal
        with:
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}
          HOSTINGER_PORT: ${{ secrets.HOSTINGER_PORT }}
          HOSTINGER_SSH_KEY: ${{ secrets.HOSTINGER_SSH_KEY }}
          HOSTINGER_TARGET: domains/${{ vars[vars.HEMI_DOMAIN] }}/public_html/${{ vars.HEMI_TARGET_FOLDER }}
          HOSTINGER_USER: ${{ secrets.HOSTINGER_USER }}
          NEXT_PUBLIC_ANALYTICS_URL: ${{ vars.NEXT_PUBLIC_ANALYTICS_URL }}
          NEXT_PUBLIC_ANALYTICS_WEBSITE_ID: ${{ vars.NEXT_PUBLIC_ANALYTICS_WEBSITE_ID }}
          NEXT_PUBLIC_COOKIE3_SITE_ID: ${{ vars.NEXT_PUBLIC_COOKIE3_SITE_ID }}
          NEXT_PUBLIC_CUSTOM_RPC_URL_HEMI_MAINNET: ${{ vars.NEXT_PUBLIC_CUSTOM_RPC_URL_HEMI_MAINNET }}
          NEXT_PUBLIC_CUSTOM_RPC_URL_HEMI_SEPOLIA: ${{ vars.NEXT_PUBLIC_CUSTOM_RPC_URL_HEMI_SEPOLIA }}
          NEXT_PUBLIC_CUSTOM_RPC_URL_MAINNET: ${{ vars.NEXT_PUBLIC_CUSTOM_RPC_URL_MAINNET }}
          NEXT_PUBLIC_CUSTOM_RPC_URL_SEPOLIA: ${{ vars.NEXT_PUBLIC_CUSTOM_RPC_URL_SEPOLIA }}
          NEXT_PUBLIC_DEFAULT_BITCOIN_VAULT_MAINNET: ${{ vars.NEXT_PUBLIC_DEFAULT_BITCOIN_VAULT_MAINNET }}
          NEXT_PUBLIC_DEFAULT_BITCOIN_VAULT_SEPOLIA: ${{ vars.NEXT_PUBLIC_DEFAULT_BITCOIN_VAULT_SEPOLIA }}
          NEXT_PUBLIC_ENABLE_ANALYTICS: ${{ github.event_name == 'release' }}
          NEXT_PUBLIC_ENABLE_COOKIE3: ${{ github.event_name == 'release' }}
          NEXT_PUBLIC_ENABLE_CLAIM_REWARDS_TESTNET: ${{ vars.NEXT_PUBLIC_ENABLE_CLAIM_REWARDS_TESTNET }}
          NEXT_PUBLIC_ENABLE_STAKE_TESTNET: ${{ vars.NEXT_PUBLIC_ENABLE_STAKE_TESTNET}}
          NEXT_PUBLIC_GENESIS_DROP_ENABLE_HEMI_TIMESTAMP: ${{ vars.NEXT_PUBLIC_GENESIS_DROP_ENABLE_HEMI_TIMESTAMP }}
          NEXT_PUBLIC_GENESIS_DROP_ENABLE_HEMI_SEPOLIA_TIMESTAMP: ${{ vars.NEXT_PUBLIC_GENESIS_DROP_ENABLE_HEMI_SEPOLIA_TIMESTAMP }}
          NEXT_PUBLIC_STAKE_GOVERNANCE_ENABLE_HEMI_TIMESTAMP: ${{ vars.NEXT_PUBLIC_STAKE_GOVERNANCE_ENABLE_HEMI_TIMESTAMP }}
          NEXT_PUBLIC_STAKE_GOVERNANCE_ENABLE_HEMI_SEPOLIA_TIMESTAMP: ${{ vars.NEXT_PUBLIC_STAKE_GOVERNANCE_ENABLE_HEMI_SEPOLIA_TIMESTAMP }}
          NEXT_PUBLIC_PORTAL_API_URL: ${{ vars.NEXT_PUBLIC_PORTAL_API_URL }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ vars.NEXT_PUBLIC_SENTRY_DSN }}
          NEXT_PUBLIC_SUBGRAPHS_API_URL: ${{ vars.NEXT_PUBLIC_SUBGRAPHS_API_URL }}
          NEXT_PUBLIC_TRACES_SAMPLE_RATE: ${{ vars.NEXT_PUBLIC_TRACES_SAMPLE_RATE }}
          NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID: ${{ vars.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN_PROD }} # Secret is suffixed but only defined in the production environment
          SENTRY_ENVIRONMENT: ${{ vars.ENVIRONMENT_NAME }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
          SENTRY_RELEASE: ${{ format('{0}@{1}', vars.SENTRY_PROJECT, github.event.release.name) }}
      - if: ${{ !cancelled() }}
        uses: bloq/actions/notify-deploy-to-slack@v1
        with:
          app-name: Hemi Portal
          environment: ${{ vars.ENVIRONMENT_NAME }}
          slack-mention: ${{ vars.SLACK_MENTION }}
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ job.status == 'failure' && 'failed :boom:' || 'finished :ok:' }}
