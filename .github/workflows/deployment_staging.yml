name: Deploy Hemi Webapp-Staging

# Will limit one workflow at the same time
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          # Can't only bring commits since ${{ github.event.before }} yet https://github.com/actions/checkout/issues/1444
          fetch-depth: 0

      - name: Setup env
        uses: ./.github/actions/setup-env

      # Migrations must be manually run before deploying the portal
      - name: Run migrations
        run: npx lerna run deploy --scope=migrations-pg --since=${{ github.event.before }}
        env:
          DEPLOY_POSTGRES_CONNECTION_DATABASE: ${{ secrets.POSTGRES_CONNECTION_DATABASE }}
          DEPLOY_POSTGRES_CONNECTION_HOST: ${{ secrets.POSTGRES_CONNECTION_HOST }}
          DEPLOY_POSTGRES_CONNECTION_PASSWORD: ${{ secrets.POSTGRES_CONNECTION_PASSWORD }}
          DEPLOY_POSTGRES_CONNECTION_USER: ${{ secrets.POSTGRES_CONNECTION_USER }}
      
      - name: Deploy claim-tokens microservice
        run: npx lerna run deploy --scope=claim-tokens --since=${{ github.event.before }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DEPLOY_POSTGRES_CONNECTION_DATABASE: ${{ secrets.POSTGRES_CONNECTION_DATABASE }}
          DEPLOY_POSTGRES_CONNECTION_HOST: ${{ secrets.POSTGRES_CONNECTION_HOST }}
          DEPLOY_POSTGRES_CONNECTION_PASSWORD: ${{ secrets.POSTGRES_CONNECTION_PASSWORD }}
          DEPLOY_POSTGRES_CONNECTION_USER: ${{ secrets.POSTGRES_CONNECTION_USER }}
          ENABLE_IP_CHECK: false
          HASH_SECRET_KEY: ${{ secrets.HASH_SECRET_KEY }}
          MARKETING_DOMAIN_URL: https://hemi.xyz
          IP_QUALITY_SCORE_SECRET_KEY: ${{ secrets.IP_QUALITY_SCORE_SECRET_KEY }}
          RECAPTCHA_SECRET_KEY:  ${{ secrets.RECAPTCHA_SECRET_KEY }}
          STAGE: 'staging'

      # Deploy everything else, ignoring migrations
      - name: Build site
        run: npx lerna run deploy --ignore=migrations-pg --ignore=claim-tokens --since=${{ github.event.before }} --concurrency=1
        env:
          # portal envs
          BASE_PATH: "/app-testnet"
          NEXT_PUBLIC_FEATURE_FLAG_ENABLE_BTC_TUNNEL: 'false'
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }} 
          NEXT_PUBLIC_CLAIM_TOKENS_URL: https://vj7c4dltid.execute-api.eu-central-1.amazonaws.com/staging

      - name: Check portal build
        id: portal_build
        uses: andstor/file-existence-action@v3
        with:
          files: "./webapp/out/"

      - name: Copy portal files to Hostinger
        # folder should only exists if portal was built
        if: steps.portal_build.outputs.files_exists == 'true'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          port: ${{ secrets.HOSTINGER_PORT }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          source: webapp/out/*
          target: domains/letshamsterdance.xyz/public_html/app
          rm: true
          strip_components: 2
